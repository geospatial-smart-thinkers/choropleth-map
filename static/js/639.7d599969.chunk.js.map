{"version":3,"file":"static/js/639.7d599969.chunk.js","mappings":"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","sources":["components/GlobeMap.jsx","pages/SelectMap.jsx","pages/AddDataPage.jsx","components/ColorPalette.jsx","pages/VisualizeMap.jsx","pages/ExportMap.jsx","pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Globe from 'react-globe.gl';\n\nconst GlobeMap = () => {\n  const globeContainerRef = useRef(null);\n  const [globeWidth, setGlobeWidth]=useState(0)\n  const [globeHeight, setGlobeHeight]=useState(0)\n\n  useEffect(() => {\n    const globeContainer = globeContainerRef.current;\n    const handleResize = () => {\n      const width = globeContainer.clientWidth;\n      const height = globeContainer.clientHeight;\n      setGlobeHeight(height)\n      setGlobeWidth(width)\n    };\n\n    handleResize(); \n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return (\n    <div className=\"globe_container\" ref={globeContainerRef}>\n      <Globe\n        width={globeWidth}\n        height={globeHeight}\n        globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-blue-marble.jpg\"\n        bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n        // backgroundImageUrl=\"//unpkg.com/three-globe/example/img/night-sky.png\"\n        backgroundColor=\"white\"\n      />\n    </div>\n  );\n};\n\nexport default GlobeMap;\n","import React, { useState, lazy, Suspense } from \"react\";\nimport GlobeMap from \"../components/GlobeMap\";\nconst WorldContriesMap = lazy(() => import(\"../maps/WorldContriesMap\"))\nconst UnitedStatesMap = lazy(() => import(\"../maps/UnitedStatesMap\"))\nconst AndhraPradeshMap = lazy(() => import(\"../maps/AndhraPradeshMap\"))\nconst AustraliaMap = lazy(() => import(\"../maps/AustraliaMap\"))\nconst JapanMap = lazy(() => import(\"../maps/JapanMap\"))\nconst IndiaMap = lazy(() => import(\"../maps/IndiaMap\"))\n\nconst Basemap = ({\n    setMapData,\n    handleNext,\n    setMapCenter,\n    setMapZoom,\n    showSelectMap,\n    setShowSelectMap,\n    selectedIndex\n}) => {\n    const [selectedOption, setSelectedOption] = useState(\"\");\n\n    const handleOptionChange = (event) => {\n        setShowSelectMap(false);\n        setMapData(null);\n        setSelectedOption(event.target.value);\n        setShowSelectMap(true);\n    };\n\n    let mapComponent;\n    if (selectedOption === \"World Countries\") {\n        mapComponent = (\n            <Suspense fallback={<div className='map_loader_container'>\n                <div className=\"preloader\">\n                    <span className=\"loader\"></span>\n                </div>\n\n            </div>}>\n                <WorldContriesMap\n                    setMapCenter={setMapCenter}\n                    setMapZoom={setMapZoom}\n                    selectedIndex={selectedIndex}\n                    setMapData={setMapData}\n                />\n            </Suspense>\n        );\n    } if (selectedOption === \"Andhra Pradesh\") {\n        mapComponent = (\n            <Suspense fallback={<div className='map_loader_container'>\n                <div className=\"preloader\">\n                    <span className=\"loader\"></span>\n                </div>\n\n            </div>}>\n                <AndhraPradeshMap\n                    setMapCenter={setMapCenter}\n                    setMapZoom={setMapZoom}\n                    selectedIndex={selectedIndex}\n                    setMapData={setMapData}\n                />\n            </Suspense>\n        );\n    }\n    if (selectedOption === \"Australia\") {\n        mapComponent = (\n            <Suspense fallback={<div className='map_loader_container'>\n                <div className=\"preloader\">\n                    <span className=\"loader\"></span>\n                </div>\n\n            </div>}>\n                <AustraliaMap\n                    setMapCenter={setMapCenter}\n                    setMapZoom={setMapZoom}\n                    selectedIndex={selectedIndex}\n                    setMapData={setMapData}\n                />\n            </Suspense>\n        );\n    }\n    if (selectedOption === \"India\") {\n        mapComponent = (\n            <Suspense fallback={<div className='map_loader_container'>\n                <div className=\"preloader\">\n                    <span className=\"loader\"></span>\n                </div>\n\n            </div>}>\n                <IndiaMap\n                    setMapCenter={setMapCenter}\n                    setMapZoom={setMapZoom}\n                    selectedIndex={selectedIndex}\n                    setMapData={setMapData}\n                />\n            </Suspense>\n        );\n    }\n    if (selectedOption === \"Japan\") {\n        mapComponent = (\n            <Suspense fallback={<div className='map_loader_container'>\n                <div className=\"preloader\">\n                    <span className=\"loader\"></span>\n                </div>\n\n            </div>}>\n                <JapanMap\n                    setMapCenter={setMapCenter}\n                    setMapZoom={setMapZoom}\n                    selectedIndex={selectedIndex}\n                    setMapData={setMapData}\n                />\n            </Suspense>\n        );\n    }\n    if (selectedOption === \"United States\") {\n        mapComponent = (\n            <Suspense fallback={<div className='map_loader_container'>\n                <div className=\"preloader\">\n                    <span className=\"loader\"></span>\n                </div>\n\n            </div>}>\n                <UnitedStatesMap\n                    setMapCenter={setMapCenter}\n                    setMapZoom={setMapZoom}\n                    selectedIndex={selectedIndex}\n                    setMapData={setMapData}\n                />\n            </Suspense>\n        );\n    }\n\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-md-3\">\n                    <div className=\"select_map_buttons\">\n                        <div className=\"section_heading\">\n                            <h2>Select the map you want to create</h2>\n                        </div>\n\n                        <div>\n\n\n                            <label className=\"selection_btn\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"shapeFileSelection\"\n                                    value=\"Andhra Pradesh\"\n                                    checked={selectedOption === \"Andhra Pradesh\"}\n                                    onChange={handleOptionChange}\n                                />{\" \"}\n                                Andhra Pradesh\n                            </label>\n                            <label className=\"selection_btn\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"shapeFileSelection\"\n                                    value=\"Australia\"\n                                    checked={selectedOption === \"Australia\"}\n                                    onChange={handleOptionChange}\n                                />{\" \"}\n                                Australia\n                            </label>\n                            <label className=\"selection_btn\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"shapeFileSelection\"\n                                    value=\"India\"\n                                    checked={selectedOption === \"India\"}\n                                    onChange={handleOptionChange}\n                                />{\" \"}\n                                India\n                            </label>\n                            <label className=\"selection_btn\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"shapeFileSelection\"\n                                    value=\"Japan\"\n                                    checked={selectedOption === \"Japan\"}\n                                    onChange={handleOptionChange}\n                                />{\" \"}\n                                Japan\n                            </label>\n                            <label className=\"selection_btn\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"shapeFileSelection\"\n                                    value=\"United States\"\n                                    checked={selectedOption === \"United States\"}\n                                    onChange={handleOptionChange}\n                                />{\" \"}\n                                United States\n                            </label>\n                            <label className=\"selection_btn\">\n                                <input\n                                    type=\"radio\"\n                                    name=\"shapeFileSelection\"\n                                    value=\"World Countries\"\n                                    checked={selectedOption === \"World Countries\"}\n                                    onChange={handleOptionChange}\n                                />{\" \"}\n                                World Countries\n                            </label>\n\n                        </div>\n\n                        <div style={{ width: \"100%\" }} className=\"first_page_btn\">\n                            <button onClick={handleNext}>Proceed &raquo; </button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-9\">\n                    {selectedOption ? (\n                        <>\n                            {showSelectMap ? (\n                                <div className=\"\">{mapComponent}</div>\n                            ) : (\n                                <div className=\"map_loader_container\">\n                                    <div className=\"preloader\">\n                                        <div className=\"loader\"></div>\n                                    </div>\n                                </div>\n                            )\n                            }\n                        </>\n\n                    ) : (\n                        <GlobeMap\n                            style={{ width: '100%', height: \"60vh\", backgroundColor: 'whitesmoke' }} />\n                    )}\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Basemap;\n","import React, { useState, useEffect } from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\n\nconst AddDataPage = ({ mapData, finalData, setFinalData, setSelectedPaletteColors, setSelectedPaletteName, handleNext, handleBack,setShowAlert,setAlertMessage }) => {\n  const [tableData, setTableData] = useState([]);\n  const [searchValue, setSearchValue] = useState('');\n  const [filteredData, setFilteredData] = useState([]);\n\n\n\n\n  // Handle value change for a specific item\n  const handleValueChange = (index, value) => {\n    setTableData((prevData) => {\n      const newData = [...prevData];\n      const filteredIndex = tableData.indexOf(filteredData[index]);\n      newData[filteredIndex] = {\n        ...newData[filteredIndex],\n        Value: value\n      };\n      return newData;\n    });\n  };\n  \n  // Initialize data on component mount\n  useEffect(() => {\n    if (mapData && mapData.features) {\n      const initialData = mapData.features.map((item) => ({\n        Name: item.properties.Name,\n        Value: ''\n      }));\n      setTableData(initialData);\n      setFilteredData(initialData); // Initialize filtered data with all table data\n    }\n  }, [mapData]);\n\n  // Filter the data based on the search value\n  useEffect(() => {\n    const filtered = tableData.filter((item) => {\n      const name = item.Name ? item.Name.toLowerCase() : '';\n      const search = searchValue ? searchValue.toLowerCase() : '';\n      return name.includes(search);\n    });\n    setFilteredData(filtered);\n  }, [tableData, searchValue]);\n\n\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setFinalData(tableData);\n    setSelectedPaletteColors([])\n    setSelectedPaletteName('')\n    setAlertMessage(\"Your Values have been submitted. You can visualize or export the map.\")\n    setShowAlert(true)\n  };\n\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n\n        <div className=\"add_data_table_search\">\n          <Autocomplete\n            options={tableData.map((item) => item.Name)}\n            value={searchValue}\n            onChange={(event, newValue) => setSearchValue(newValue)}\n            renderInput={(params) => (\n              <TextField {...params} label=\"Search by Name\" variant=\"outlined\" />\n            )}\n          />\n        </div>\n\n\n        {filteredData.length > 0 ? (\n          <>\n            <div className=\"add_data_table\">\n              <table>\n                <thead>\n                  <tr>\n                    <th>Names</th>\n                    <th>Values</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {filteredData.map((item, index) => (\n                    <tr key={index}>\n                      <td>{item.Name}</td>\n                      <td>\n                        <input\n                          type='number'\n                          placeholder='Assign Value'\n                          value={item.Value}\n                          onChange={(e) => handleValueChange(index, e.target.value)}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n            <div>\n              <button className='selection_btn_button' type=\"submit\">Submit</button>\n            </div>\n          </>\n\n        ) : (\n          <div className='warning_container'>Please Select a map to add values</div>\n        )}\n\n\n      </form>\n      <div className=\"page_change_btn\">\n        <button onClick={handleBack}> &laquo; Back </button>\n        <button onClick={handleNext}>Proceed &raquo;</button>\n      </div>\n    </div>\n\n\n  );\n};\n\nexport default AddDataPage;","import React from 'react';\nconst ColorPalette = ({ setSelectedPaletteColors, selectedPaletteColors, minValueMap, maxValueMap, selectedPaletteName, setSelectedPaletteName }) => {\n\n\n\n    const colorPalettes = [\n        { name: 'Palette 1', colors: ['#00FF00', '#FF0000'] },\n        { name: 'Palette 2', colors: ['#FFFF00', '#FF00FF'] },\n        { name: 'Palette 3', colors: ['#FAF0E4', '#EA906C'] },\n        { name: 'Palette 4', colors: ['#D3D04F', '#0E2954'] },\n\n\n        { name: 'Palette 5', colors: ['#22A699', '#F24C3D'] },\n        { name: 'Palette 6', colors: ['#213363', '#D3D04F'] },\n        { name: 'Palette 7', colors: ['#B70404', '#FFE569'] },\n        { name: 'Palette 8', colors: ['#84857e', '#00FF00'] },\n    ];\n\n    const handlePaletteChange = (event) => {\n        const palette = colorPalettes.find((p) => p.name === event.target.value);\n        if (palette) {\n            setSelectedPaletteName(palette.name);\n            setSelectedPaletteColors(palette.colors)\n\n        }\n    };\n\n\n\n    const generateGradientStyle = (colors) => {\n        if (colors && colors.length >= 2) {\n            const gradient = `linear-gradient(to right, ${colors.join(', ')})`;\n            return {\n                backgroundImage: gradient,\n            };\n        }\n        return null;\n    };\n\n\n\n    return (\n        <div className='color_pallete_container'>\n            <div className=\"dropdown\">\n                <button\n                    className=\"color_ramp_btn dropdown-toggle\"\n                    type=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                >\n                    Select Palette\n                </button>\n                <div className=\"dropdown-menu\">\n                    {colorPalettes.map((palette, index) => (\n                        <label className='color_ramp_dropdown' key={index} htmlFor={`palette${index}`}>\n                            <input\n                                type=\"radio\"\n                                id={`palette${index}`}\n                                name=\"colorPalette\"\n                                className='color_ramp_input'\n                                value={palette.name}\n                                checked={selectedPaletteName === palette.name}\n                                onChange={handlePaletteChange}\n                            />\n\n                            <div\n                                key={index}\n                                className=\"dropdown-item\"\n                                style={{ ...generateGradientStyle(palette.colors) }}\n                                onClick={() => {\n                                    setSelectedPaletteName(palette.name);\n                                    setSelectedPaletteColors(palette.colors);\n                                }}\n                            >\n                                <p>{palette.name}</p>\n                            </div>\n\n\n                        </label>\n                    ))}\n                </div>\n\n            </div>\n            {selectedPaletteColors.length > 0 && (\n                <div>\n                    <div className='selected_palette'\n                        style={{ ...generateGradientStyle(selectedPaletteColors) }}\n                    ></div>\n                    <div className=\"legend_value_container\" style={{ width: '100%' }}>\n                        <div className=\"legend_value\">\n                            {minValueMap}\n                        </div>\n                        <div className=\"legend_value\">\n                            {maxValueMap}\n                        </div>\n\n                    </div>\n\n                </div>\n\n            )}\n\n\n        </div>\n    );\n};\n\nexport default ColorPalette;\n","import React, { useState } from 'react';\nimport { MapContainer,  GeoJSON, ScaleControl } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-fullscreen/dist/Leaflet.fullscreen.js';\nimport 'leaflet-fullscreen/dist/leaflet.fullscreen.css';\nimport * as L from 'leaflet';\nimport ColorPalette from '../components/ColorPalette';\nimport chroma from 'chroma-js';\n\nconst VisualizeMap = ({ minValueMap, setMinValueMap, maxValueMap, setMaxValueMap, showVisualizeMap, mapData, finalData, \n  selectedPaletteColors, setSelectedPaletteColors,\n  selectedPaletteName,\n  setSelectedPaletteName,\n  handleNext, handleBack,\n  nullColor, setNullColor,\n  mapCenter,mapZoom\n}) => {\n  const [selectedFeature, setSelectedFeature] = useState([]);\n\n\n  const getColor = (value) => {\n    if (finalData.length > 0) {\n      const nonEmptyValues = finalData.filter((data) => data.Value !== \"\");\n      setMinValueMap(Math.min(...nonEmptyValues.map((data) => parseInt(data.Value))))\n      setMaxValueMap(Math.max(...nonEmptyValues.map((data) => parseInt(data.Value))))\n    }\n    if (!selectedPaletteColors || selectedPaletteColors.length < 2) {\n      return '#C0C0C0';\n    }\n\n    const scale = chroma.scale(selectedPaletteColors).domain([minValueMap, maxValueMap]);\n    return scale(value).hex();\n  };\n\n\n\n  const style = (feature) => {\n    const name = feature.properties.Name;\n    const value = finalData.find((data) => data.Name === name)?.Value || null;\n\n    return {\n      fillColor: value ? getColor(value) : nullColor,\n      opacity: 0.5,\n      weight: selectedFeature.name === name ? 2 : 1,\n      color: 'black',\n      fillOpacity: selectedFeature.name === name ? 1 : 0.7,\n      dashArray: '2',\n    };\n  };\n\n  function getVoivodeshipName(feature, layer) {\n    const name = layer.feature.properties.Name;\n    const value = finalData.find((data) => data.Name === name)?.Value || '';\n    const popupContent = `\n      <div>\n        ${name}<br/>\n        ${value}\n      </div>\n    `;\n    layer.bindPopup(popupContent);\n  }\n\n\n\n  function onEachFeature(feature, layer) {\n    layer.on('mouseover', function (e) {\n      const layer = e.target;\n      const name = layer.feature.properties.Name;\n      const value = finalData.find((data) => data.Name === name)?.Value || '-';\n      setSelectedFeature({ name, value });\n      getVoivodeshipName(feature, layer);\n      this.openPopup();\n      layer.setStyle(style(layer.feature));\n      layer.bringToFront();\n    });\n\n    layer.on('mouseout', function (e) {\n      setSelectedFeature({});\n      this.closePopup();\n      const layer = e.target;\n      layer.setStyle(style(layer.feature));\n    });\n  }\n\n\n\n\n  const handleNullColorChange = (event) => {\n    setNullColor(event.target.value);\n  };\n\n\n\n\n\n  return (\n    <div>\n      <div className=\"map_visualize_container\">\n        <div className=\"row \">\n\n          {mapData ? (\n\n            <>\n              <div className=\"col-md-3\">\n                <ColorPalette\n                  setSelectedPaletteColors={setSelectedPaletteColors}\n                  selectedPaletteColors={selectedPaletteColors}\n                  minValueMap={minValueMap}\n                  maxValueMap={maxValueMap}\n                  selectedPaletteName={selectedPaletteName}\n                  setSelectedPaletteName={setSelectedPaletteName}\n                />\n\n                <div className=\"dropdown\">\n                  <button\n                    className=\"color_ramp_btn dropdown-toggle\"\n                    type=\"button\"\n                    data-bs-toggle=\"dropdown\"\n                    aria-expanded=\"false\"\n                  >\n                    Select Color for null values\n                  </button>\n                  <div className=\"dropdown-menu null_color\">\n                    <input type=\"color\" name=\"null_color\" value={nullColor} onChange={handleNullColorChange} />\n                  </div>\n                </div>\n\n              </div>\n              <div className=\"col-md-9\">\n                <div className=\"map_visualize\">\n                  {showVisualizeMap ? (\n                     <MapContainer\n                     center={mapCenter}\n                     zoom={mapZoom}\n                       fullscreenControl={true}\n                       style={{ width: '100%', height: '600px', backgroundColor: 'white', border: 'none', margin: 'auto' }}\n                       attributionControl={false}\n                       zoomDelta={0.25}\n                       zoomSnap={0}\n                       crs={L.CRS.EPSG4326}\n                       \n                       scrollWheelZoom={false}\n                       dragging={false}\n                     >   \n   \n                       <GeoJSON\n                         data={mapData.features}\n                         style={style}\n                         onEachFeature={onEachFeature}\n                       />\n   \n                       \n   \n                       <ScaleControl />\n                     </MapContainer>\n\n                  ):(\n                    <div className='map_loader_container'>\n                      <div className=\"preloader\">\n                                    <div className=\"loader\"></div>\n                                </div>\n\n                    </div>\n                  )}\n\n                 \n\n                </div>\n              </div>\n            </>\n\n          ) : (\n            <div className='warning_container'>Please Select a map to Visualize.</div>\n          )}\n\n        </div>\n\n      </div>\n      <div className=\"page_change_btn\">\n        <button onClick={handleBack}> &laquo; Back </button>\n        <button onClick={handleNext}>Proceed &raquo;</button>\n      </div>\n    </div>\n  );\n};\n\nexport default VisualizeMap;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { MapContainer, useMap, GeoJSON, FeatureGroup, ScaleControl } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport * as L from 'leaflet';\nimport northarrow from \"../assets/north_arrow.png\"\nimport chroma from 'chroma-js';\nimport domtoimage from 'dom-to-image';\nimport jsPDF from 'jspdf';\n\nconst ExportMap = ({ mapData, finalData, selectedPaletteColors, showExportMap, setShowExportMap, minValueMap, maxValueMap, handleBack, nullColor }) => {\n  const [mapTitle, setMapTitle] = useState('');\n  const [mapSummary, setMapSummary] = useState('');\n  const [mapCreator, setMapCreator] = useState('');\n  const [mapLegend, setMapLegend] = useState('');\n\n  const mapContainerRef = useRef(null);\n\n\n  function setWindowWidth() {\n    var viewportWidth = window.innerWidth;\n    var windowWidth;\n    if (viewportWidth <= [767]) {\n      windowWidth = { width: '100%', height: \"450px\", backgroundColor: 'white', border: 'none', margin: 'auto' };\n    } else {\n      windowWidth = { width: '100%', height: \"600px\", backgroundColor: 'white', border: 'none', margin: 'auto' };\n    }\n    return windowWidth;\n  }\n\n\n  const getColor = (value) => {\n    if (!selectedPaletteColors || selectedPaletteColors.length < 2) {\n      return '#C0C0C0';\n    }\n    const scale = chroma.scale(selectedPaletteColors).domain([minValueMap, maxValueMap]);\n    return scale(value).hex();\n  };\n  const style = (feature) => {\n    const name = feature.properties.Name;\n    const value = finalData.find((data) => data.Name === name)?.Value || null;\n\n    return {\n      fillColor: value ? getColor(value) : nullColor,\n      opacity: 0.5,\n      weight: 1.5,\n      color: 'black',\n      fillOpacity: 1,\n    };\n  };\n\n  const FitBoundsExample = () => {\n    const map = useMap();\n    useEffect(() => {\n      if (mapData) {\n        const geoJSONLayer = L.geoJSON(mapData);\n        const geoJSONBounds = geoJSONLayer.getBounds();\n        map.fitBounds(geoJSONBounds);\n        map.setMaxBounds(geoJSONBounds);\n      }\n    }, [mapData]);\n\n    return null;\n  };\n\n\n  const generateGradientStyle = (colors) => {\n    if (colors && colors.length >= 2) {\n      const gradient = `linear-gradient(to right, ${colors.join(', ')})`;\n      return {\n        backgroundImage: gradient,\n      };\n    }\n    return null;\n  };\n\n\n\n\n  const handleExportMapImage = () => {\n    const mapContainer = mapContainerRef.current;\n\n    const options = {\n      width: mapContainer.offsetWidth * 4, // Adjust the width based on the desired DPI\n      height: mapContainer.offsetHeight * 4, // Adjust the height based on the desired DPI\n      style: {\n        transform: 'scale(4)', // Adjust the scale value based on the desired DPI\n        transformOrigin: 'top left',\n      },\n    };\n\n    domtoimage\n      .toBlob(mapContainer, options)\n      .then((blob) => {\n        const link = document.createElement('a');\n        link.href = URL.createObjectURL(blob);\n        link.download = 'map.png';\n        link.click();\n        URL.revokeObjectURL(link.href);\n      })\n      .catch((error) => {\n        console.error('Error exporting map image:', error);\n      });\n  };\n\n\n\n  const handleExportMapPDF = () => {\n    const mapContainer = mapContainerRef.current;\n    const viewportWidth = window.innerWidth;\n\n    const options = {\n      width: mapContainer.offsetWidth * 2,\n      height: mapContainer.offsetHeight * 2,\n      style: {\n        transform: 'scale(2)',\n        transformOrigin: 'top left',\n        width: '100%',\n        height: 'auto',\n      },\n    };\n\n    domtoimage\n      .toBlob(mapContainer, options)\n      .then((blob) => {\n        const reader = new FileReader();\n        reader.onloadend = () => {\n          const img = new Image();\n          img.onload = () => {\n            const aspectRatio = img.width / img.height;\n            const pdf = new jsPDF('portrait', 'px', 'a4');\n\n            if (viewportWidth <= 767) {\n              const pdfHeight = pdf.internal.pageSize.getHeight() - 20; // Set the desired height for PDF if viewport width <= 767\n              const pdfWidth = pdfHeight * aspectRatio;\n              const x = (pdf.internal.pageSize.getWidth() - pdfWidth) / 2;\n              const y = (pdf.internal.pageSize.getHeight() - pdfHeight) / 2;\n              pdf.addImage(img, 'PNG', x, y, pdfWidth, pdfHeight);\n            } else {\n              const pdfWidth = pdf.internal.pageSize.getWidth(); // Use A4 width for PDF if viewport width > 767\n              const pdfHeight = pdfWidth / aspectRatio;\n              const x = 0;\n              const y = (pdf.internal.pageSize.getHeight() - pdfHeight) / 2;\n              pdf.addImage(img, 'PNG', x, y, pdfWidth, pdfHeight);\n            }\n\n\n            // Add text line at the bottom\n            const websiteName = 'This map has been downloaded from GEOSPATIAL SMART THINKERS';\n            const fontSize = 10;\n\n            const textWidth = pdf.getStringUnitWidth(websiteName) * fontSize / pdf.internal.scaleFactor;\n            const textX = (pdf.internal.pageSize.getWidth() - textWidth) / 2; // X-coordinate for center alignment\n            const textY = pdf.internal.pageSize.getHeight() - 10; // Y-coordinate for the text\n\n            pdf.setFontSize(fontSize);\n            pdf.text(textX, textY, websiteName);\n\n\n            const pdfOptions = {\n              compress: true, // Enable compression\n              quality: 0.4, // Adjust the quality (0.0 - 1.0, default is 0.9)\n            };\n\n            pdf.save('map.pdf', pdfOptions);\n          };\n          img.src = reader.result;\n        };\n        reader.readAsDataURL(blob);\n      })\n      .catch((error) => {\n        console.error('Error exporting map image:', error);\n      });\n  };\n\n\n\n  return (\n    <div>\n\n      {mapData ? (\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <div className=\"inser_title_container\">\n              <input\n                type='text'\n                placeholder='Insert the map title here'\n                value={mapTitle}\n                onChange={(e) => setMapTitle(e.target.value)}\n              />\n              <textarea\n                rows={4}\n                placeholder='Summary of the Map.'\n                value={mapSummary}\n                onChange={(e) => setMapSummary(e.target.value)} />\n\n              <input\n                type='text'\n                placeholder='Legend Name'\n                value={mapLegend}\n                onChange={(e) => setMapLegend(e.target.value)}\n              />\n              <input\n                type='text'\n                placeholder='Created by'\n                title='Here you can add your name to show on the map'\n                value={mapCreator}\n                onChange={(e) => setMapCreator(e.target.value)}\n              />\n\n            </div>\n\n            <button onClick={handleExportMapImage} className='export_btn'>Export as Image</button>\n            <button onClick={handleExportMapPDF} className='export_btn'>Export as PDF</button>\n\n\n          </div>\n          <div className=\"col-md-9\">\n\n            <div className=\"export_map\" ref={mapContainerRef}>\n              <div className=\"export_map_inner\">\n                <p className='map_title'>{mapTitle}</p>\n                <div className=\"north_arrow_img\">\n                  <img src={northarrow} alt='North Arrow' />\n\n                </div>\n\n                {showExportMap ? (\n                  <MapContainer\n                    style={setWindowWidth()}\n                    attributionControl={false}\n                    scrollWheelZoom={false}\n                    zoomControl={false}\n                    doubleClickZoom={false}\n                    crs={L.CRS.EPSG4326}\n                    zoomDelta={0.25}\n                    zoomSnap={0}\n\n\n                    dragging={false}\n                    keyboard={false}\n                    touchZoom={false}\n                    boxZoom={false}\n                    tap={false}\n                  >\n                    <FitBoundsExample />\n                    <FeatureGroup>\n                      <GeoJSON\n                        data={mapData.features}\n                        style={style}\n                        interactive={false}\n                      />\n                    </FeatureGroup>\n                    <ScaleControl />\n                  </MapContainer>\n\n                ) : (\n                  <div className='map_loader_container'>\n                    <div className=\"preloader\">\n                      <span className=\"loader\"></span>\n                    </div>\n\n                  </div>\n                )}\n\n\n\n                <div className=\"row\">\n                  <div className=\"col-md-6\">\n                    {mapSummary && (\n                      <p className='map_summary'><strong>Map Summary: </strong>{mapSummary}</p>\n                    )}\n\n                  </div>\n                  <div className=\"col-md-6\">\n                    <div className='export_map_legend_container'>\n                      <div className=\"export_map_legend\">\n                        {selectedPaletteColors.length > 0 && mapLegend && (\n                          <>\n                            <p className='map_summary'>{mapLegend}</p>\n                            <div className='selected_palette'\n                              style={{ ...generateGradientStyle(selectedPaletteColors) }}\n                            ></div>\n\n                            <div className=\"legend_value_container\" style={{ width: '100%' }}>\n\n                              <div className=\"legend_value\">\n                                {minValueMap}\n                              </div>\n                              <div className=\"legend_value\">\n                                {maxValueMap}\n                              </div>\n\n                            </div>\n                          </>\n\n\n                        )}\n\n                        {mapCreator && (\n                          <p className='map_summary'><strong>Created By: </strong>{mapCreator}</p>\n                        )}\n\n\n                      </div>\n\n\n                    </div>\n\n                  </div>\n                </div>\n\n              </div>\n\n\n\n\n            </div>\n          </div>\n        </div>\n\n      ) : (\n        <div className='warning_container'>Please Select a map to Export.</div>\n\n      )}\n\n      <div className=\"page_change_btn\">\n        <button onClick={handleBack}>&laquo; Back </button>\n      </div>\n\n\n    </div>\n  )\n}\n\nexport default ExportMap","import React, { useState } from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport Basemap from './SelectMap';\nimport AddDataPage from './AddDataPage';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport VisualizeMap from './VisualizeMap';\nimport ExportMap from './ExportMap';\nimport HelpPDF from \"../assets/Help.pdf\"\n\nconst Dashboard = ({ setShowAlert, setAlertMessage }) => {\n  const [mapData, setMapData] = useState(null);\n  const [finalData, setFinalData] = useState([]);\n\n  const [selectedPaletteColors, setSelectedPaletteColors] = useState([]);\n  const [selectedPaletteName, setSelectedPaletteName] = useState('');\n  const [showExportMap, setShowExportMap] = useState(false);\n  const [showVisualizeMap, setShowVisualizeMap] = useState(false);\n  const [showSelectMap, setShowSelectMap] = useState(false);\n  const [minValueMap, setMinValueMap] = useState([])\n  const [maxValueMap, setMaxValueMap] = useState([])\n  const [nullColor, setNullColor] = useState('#84857e');\n\n  const [mapCenter, setMapCenter] = useState([0, 0]);\n  const [mapZoom, setMapZoom] = useState(5);\n\n\n  const handleSelectMap = () => {\n    setShowSelectMap(false);\n    setTimeout(() => {\n      setShowSelectMap(true)\n    }, 0);\n\n    window.scrollTo(0, 0);\n    setShowMenu(false);\n\n  };\n\n  const handleVisualizeMap = () => {\n    setShowVisualizeMap(false);\n    setTimeout(() => {\n      setShowVisualizeMap(true)\n    }, 0);\n\n    window.scrollTo(0, 0);\n    setShowMenu(false);\n\n  };\n\n  const handleExportMap = () => {\n    setShowExportMap(false);\n    setTimeout(() => {\n      setShowExportMap(true)\n    }, 0);\n\n    window.scrollTo(0, 0);\n    setShowMenu(false);\n  };\n\n  const [showMenu, setShowMenu] = useState(false);\n  const handleToggle = () => {\n    setShowMenu(!showMenu);\n  };\n  const handleLinkClick = () => {\n    window.scrollTo(0, 0);\n    setShowMenu(false);\n  };\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const totalTabs = 4;\n\n\n  const handleNext = () => {\n    setSelectedIndex(prevIndex => (prevIndex + 1) % totalTabs);\n    // setShowSelectMap(false)\n    setShowExportMap(false);\n    setShowVisualizeMap(false);\n\n    setTimeout(() => {\n      // setShowSelectMap(true)\n      setShowExportMap(true)\n      setShowVisualizeMap(true);\n    }, 0);\n    window.scrollTo(0, 0);\n    setShowMenu(false);\n\n  };\n\n  const handleBack = () => {\n    setSelectedIndex(prevIndex => (prevIndex - 1 + totalTabs) % totalTabs);\n    // setShowSelectMap(false)\n    setShowExportMap(false);\n    setShowVisualizeMap(false);\n\n    setTimeout(() => {\n      setShowExportMap(true)\n      setShowVisualizeMap(true);\n      // setShowSelectMap(true)\n    }, 0);\n\n    window.scrollTo(0, 0);\n    setShowMenu(false);\n  };\n\n\n\n  return (\n\n    <div >\n      <button className=\"react_tab_toggle\" onClick={handleToggle}>\n        {showMenu ? <FaTimes /> : <FaBars />}\n      </button>\n\n      <Tabs forceRenderTabPanel={true} selectedIndex={selectedIndex} onSelect={index => setSelectedIndex(index)}>\n\n        <TabList className={`tab_menu ${showMenu ? 'show' : ''}`}>\n          <Tab onClick={handleSelectMap}>\n            1. Select Your Map\n          </Tab>\n          <Tab onClick={handleLinkClick}>\n            2. Add Your Data\n          </Tab>\n\n          <Tab onClick={handleVisualizeMap}>\n            3. Visualize\n          </Tab>\n          <Tab onClick={handleExportMap}>\n            4. Export Map\n          </Tab >\n\n        </TabList>\n        <div className=\"need_help_container\">\n          <p>Need Help?<a href={HelpPDF} target='_blank' rel=\"noreferrer\"> Learn how to create your first map.</a></p>\n        </div>\n\n\n        <TabPanel>\n          <Basemap\n            mapData={mapData}\n            setMapData={setMapData}\n            showSelectMap={showSelectMap}\n            setShowSelectMap={setShowSelectMap}\n            handleNext={handleNext}\n            setMapCenter={setMapCenter}\n            setMapZoom={setMapZoom}\n            selectedIndex={selectedIndex}\n\n          />\n        </TabPanel>\n\n        <TabPanel>\n          <AddDataPage\n            mapData={mapData}\n            finalData={finalData}\n            setFinalData={setFinalData}\n            setSelectedPaletteColors={setSelectedPaletteColors}\n            setSelectedPaletteName={setSelectedPaletteName}\n            handleNext={handleNext}\n            handleBack={handleBack}\n            setShowAlert={setShowAlert}\n            setAlertMessage={setAlertMessage}\n          />\n        </TabPanel>\n\n        <TabPanel>\n          <VisualizeMap\n            mapData={mapData}\n            finalData={finalData}\n            showVisualizeMap={showVisualizeMap}\n            selectedPaletteColors={selectedPaletteColors}\n            setSelectedPaletteColors={setSelectedPaletteColors}\n            maxValueMap={maxValueMap}\n            setMaxValueMap={setMaxValueMap}\n            setMinValueMap={setMinValueMap}\n            minValueMap={minValueMap}\n            selectedPaletteName={selectedPaletteName}\n            setSelectedPaletteName={setSelectedPaletteName}\n            handleNext={handleNext}\n            handleBack={handleBack}\n            nullColor={nullColor}\n            setNullColor={setNullColor}\n            mapCenter={mapCenter}\n            mapZoom={mapZoom}\n          />\n        </TabPanel>\n\n        <TabPanel>\n          <ExportMap\n            mapData={mapData}\n            finalData={finalData}\n            selectedPaletteColors={selectedPaletteColors}\n            showExportMap={showExportMap}\n            setShowExportMap={setShowExportMap}\n            maxValueMap={maxValueMap}\n            minValueMap={minValueMap}\n            handleBack={handleBack}\n            nullColor={nullColor}\n\n          />\n        </TabPanel>\n      </Tabs>\n    </div>\n\n\n  )\n}\n\nexport default Dashboard"],"names":["globeContainerRef","useRef","_useState","useState","_useState2","_slicedToArray","globeWidth","setGlobeWidth","_useState3","_useState4","globeHeight","setGlobeHeight","useEffect","globeContainer","current","handleResize","width","clientWidth","height","clientHeight","window","addEventListener","removeEventListener","_jsx","className","ref","children","Globe","globeImageUrl","bumpImageUrl","backgroundColor","WorldContriesMap","lazy","UnitedStatesMap","AndhraPradeshMap","AustraliaMap","JapanMap","IndiaMap","_ref","mapComponent","setMapData","handleNext","setMapCenter","setMapZoom","showSelectMap","setShowSelectMap","selectedIndex","selectedOption","setSelectedOption","handleOptionChange","event","target","value","Suspense","fallback","_jsxs","type","name","checked","onChange","style","onClick","_Fragment","GlobeMap","mapData","setFinalData","finalData","setSelectedPaletteColors","setSelectedPaletteName","handleBack","setShowAlert","setAlertMessage","tableData","setTableData","searchValue","setSearchValue","_useState5","_useState6","filteredData","setFilteredData","features","initialData","map","item","Name","properties","Value","filtered","filter","toLowerCase","search","includes","onSubmit","e","preventDefault","Autocomplete","options","newValue","renderInput","params","TextField","_objectSpread","label","variant","length","index","placeholder","prevData","newData","_toConsumableArray","filteredIndex","indexOf","handleValueChange","selectedPaletteColors","minValueMap","maxValueMap","selectedPaletteName","colorPalettes","colors","handlePaletteChange","palette","find","p","generateGradientStyle","backgroundImage","concat","join","htmlFor","id","setMinValueMap","setMaxValueMap","showVisualizeMap","nullColor","setNullColor","mapCenter","mapZoom","selectedFeature","setSelectedFeature","getColor","nonEmptyValues","data","Math","min","apply","parseInt","max","chroma","domain","scale","hex","feature","_finalData$find","fillColor","opacity","weight","color","fillOpacity","dashArray","ColorPalette","MapContainer","center","zoom","fullscreenControl","border","margin","attributionControl","zoomDelta","zoomSnap","crs","L","EPSG4326","scrollWheelZoom","dragging","GeoJSON","onEachFeature","layer","on","_finalData$find3","_finalData$find2","popupContent","bindPopup","getVoivodeshipName","this","openPopup","setStyle","bringToFront","closePopup","ScaleControl","showExportMap","setShowExportMap","mapTitle","setMapTitle","mapSummary","setMapSummary","mapCreator","setMapCreator","_useState7","_useState8","mapLegend","setMapLegend","mapContainerRef","FitBoundsExample","useMap","geoJSONBounds","getBounds","fitBounds","setMaxBounds","rows","title","mapContainer","offsetWidth","offsetHeight","transform","transformOrigin","domtoimage","then","blob","link","document","createElement","href","URL","createObjectURL","download","click","revokeObjectURL","catch","error","console","viewportWidth","innerWidth","reader","FileReader","onloadend","img","Image","onload","aspectRatio","pdf","jsPDF","pdfHeight","internal","pageSize","getHeight","pdfWidth","x","getWidth","y","addImage","websiteName","textWidth","getStringUnitWidth","scaleFactor","textX","textY","setFontSize","text","save","compress","quality","src","result","readAsDataURL","northarrow","alt","zoomControl","doubleClickZoom","keyboard","touchZoom","boxZoom","tap","FeatureGroup","interactive","_useState9","_useState10","_useState11","_useState12","setShowVisualizeMap","_useState13","_useState14","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","showMenu","setShowMenu","_useState27","_useState28","setSelectedIndex","prevIndex","setTimeout","scrollTo","FaTimes","FaBars","Tabs","forceRenderTabPanel","onSelect","TabList","Tab","HelpPDF","rel","TabPanel","Basemap","AddDataPage","VisualizeMap","ExportMap"],"sourceRoot":""}